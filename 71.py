# coding: utf-8

# PEP-8
"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
 который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
 объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
 Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
 первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""

class Matrix:
    def __init__(self, array):
        self.array = array

    def __str__(self):
        return '\n'.join([''.join([f'{item:4}' for item in row])for row in self.array])

    def __add__(self, other):
        res_array = [[0 for row in col] for col in self.array]  # создание нулевой матрицы
        i = 0
        while i < len(res_array):
            j = 0
            while j < len(res_array[i]):
                res_array[i][j] = self.array[i][j] + other.array[i][j]
                j += 1
            i += 1
        return Matrix(res_array)

if __name__ == '__main__':
    mat1 = Matrix([[1, 2, 3, 0], [4, 5, 6, 3], [7, 8, 9, 3]])
    print(mat1, "\n")
    mat2 = Matrix([[7, 8, 9, 5], [4, 5, 6, 5], [1, 2, 3, 6]])
    print(mat2, "\n")
    print(mat1 + mat2)
